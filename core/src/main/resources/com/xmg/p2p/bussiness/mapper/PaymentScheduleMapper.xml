<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.bussiness.mapper.PaymentScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.xmg.p2p.bussiness.domain.PaymentSchedule" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="deadLine" property="deadLine" jdbcType="TIMESTAMP" />
    <result column="payDate" property="payDate" jdbcType="TIMESTAMP" />
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="principal" property="principal" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="monthIndex" property="monthIndex" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="bidRequestType" property="bidRequestType" jdbcType="TINYINT" />
    <result column="returnType" property="returnType" jdbcType="TINYINT" />
    <result column="bidRequestId" property="bidRequestId" jdbcType="BIGINT" />
<!--    <result column="borrowUser_id" property="borrowuserId" jdbcType="BIGINT" />-->
    <result column="bidRequestTitle" property="bidRequestTitle" jdbcType="VARCHAR" />
    <association property="borrowUser" columnPrefix="lo_" javaType="com.xmg.p2p.base.domain.Logininfo">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <collection property="paymentScheduleDetails"
                column="id"
                ofType="com.xmg.p2p.bussiness.domain.PaymentScheduleDetail"
                select="com.xmg.p2p.bussiness.mapper.PaymentScheduleDetailMapper.selectByPaymentId"/>
  </resultMap>

  <insert id="insert" parameterType="com.xmg.p2p.bussiness.domain.PaymentSchedule" useGeneratedKeys="true" keyProperty="id" >
    insert into PaymentSchedule (deadLine, payDate, totalAmount, 
      principal, interest, monthIndex, 
      state, bidRequestType, returnType, 
      bidRequestId, borrowUser_id, bidRequestTitle
      )
    values (#{deadLine,jdbcType=TIMESTAMP}, #{payDate,jdbcType=TIMESTAMP}, #{totalAmount,jdbcType=DECIMAL},
      #{principal,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL}, #{monthIndex,jdbcType=TINYINT},
      #{state,jdbcType=TINYINT}, #{bidRequestType,jdbcType=TINYINT}, #{returnType,jdbcType=TINYINT},
      #{bidRequestId,jdbcType=BIGINT}, #{borrowUser.id,jdbcType=BIGINT}, #{bidRequestTitle,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xmg.p2p.bussiness.domain.PaymentSchedule" >
    update PaymentSchedule
    set deadLine = #{deadLine,jdbcType=TIMESTAMP},
      payDate = #{payDate,jdbcType=TIMESTAMP},
      totalAmount = #{totalAmount,jdbcType=DECIMAL},
      principal = #{principal,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      monthIndex = #{monthIndex,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      bidRequestType = #{bidRequestType,jdbcType=TINYINT},
      returnType = #{returnType,jdbcType=TINYINT},
      bidRequestId = #{bidRequestId,jdbcType=BIGINT},
      borrowUser_id = #{borrowUser.id,jdbcType=BIGINT},
      bidRequestTitle = #{bidRequestTitle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select ps.id, ps.deadLine, ps.payDate, ps.totalAmount, ps.principal, ps.interest, ps.monthIndex, ps.state,
    ps.bidRequestType, ps.returnType, ps.bidRequestId, ps.bidRequestTitle, lo.id as lo_id,lo.username as lo_username
    from PaymentSchedule ps
    LEFT JOIN logininfo lo ON ps.borrowUser_id = lo.id
    where ps.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
     select ps.id, ps.deadLine, ps.payDate, ps.totalAmount, ps.principal, ps.interest, ps.monthIndex, ps.state,
    ps.bidRequestType, ps.returnType, ps.bidRequestId, ps.bidRequestTitle, lo.id as lo_id,lo.username as lo_username
    from PaymentSchedule ps
    LEFT JOIN logininfo lo ON ps.borrowUser_id = lo.id
  </select>

  <sql id="where_sql">
    <where>
      <if test="state != -1">
        AND ps.state = #{state}
      </if>
      <if test="beginDate != null">
        AND ps.payDate &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        AND ps.payDate &lt;= #{endDate}
      </if>
      <if test="userinfoId != null">
        AND ps.borrowUser_id = #{userinfoId}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="int">
    SELECT count(ps.id) FROM PaymentSchedule ps <include refid="where_sql"/>
  </select>

  <select id="queryForData" resultMap="BaseResultMap">
     select ps.id, ps.deadLine, ps.payDate, ps.totalAmount, ps.principal, ps.interest, ps.monthIndex, ps.state,
    ps.bidRequestType, ps.returnType, ps.bidRequestId, ps.bidRequestTitle, lo.id as lo_id,lo.username as lo_username
    from PaymentSchedule ps
    LEFT JOIN logininfo lo ON ps.borrowUser_id = lo.id
    <include refid="where_sql"/>
    limit #{start},#{pageSize}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select ps.id, ps.deadLine, ps.payDate, ps.totalAmount, ps.principal, ps.interest, ps.monthIndex, ps.state,
    ps.bidRequestType, ps.returnType, ps.bidRequestId, ps.bidRequestTitle, lo.id as lo_id,lo.username as lo_username
    from PaymentSchedule ps
    LEFT JOIN logininfo lo ON ps.borrowUser_id = lo.id
    WHERE lo.id = #{id}
  </select>
</mapper>