<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.base.mapper.RealAuthMapper" >
  <resultMap id="BaseResultMap" type="com.xmg.p2p.base.domain.RealAuth" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="realName" property="realName" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="bornDate" property="bornDate" jdbcType="VARCHAR" />
    <result column="idNumber" property="idNumber" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="image1" property="image1" jdbcType="VARCHAR" />
    <result column="image2" property="image2" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
    <!--<result column="auditor_id" property="auditorId" jdbcType="BIGINT" />
    <result column="applier_id" property="applierId" jdbcType="BIGINT" />-->
    <association property="applier" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="ap_">
       <id column="id" property="id"/>
       <result column="username" property="username"/>
    </association>
    <association property="auditor" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="au_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>

  </resultMap>

  <insert id="insert" useGeneratedKeys="true" keyProperty="record.id" >
    insert into realauth (realName, sex, bornDate,
      idNumber, address, state, 
      image1, image2, remark, 
      auditTime, applyTime, auditor_id, 
      applier_id)
    values (AES_ENCRYPT(#{record.realName},#{key}), #{record.sex,jdbcType=TINYINT}, #{record.bornDate,jdbcType=VARCHAR},
      AES_ENCRYPT(#{record.idNumber},#{key}), #{record.address,jdbcType=VARCHAR}, #{record.state,jdbcType=TINYINT},
      #{record.image1,jdbcType=VARCHAR}, #{record.image2,jdbcType=VARCHAR}, #{record.remark,jdbcType=VARCHAR},
      #{record.auditTime,jdbcType=TIMESTAMP}, #{record.applyTime,jdbcType=TIMESTAMP}, #{record.auditor.id,jdbcType=BIGINT},
      #{record.applier.id,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey">
    update realauth
    set
      sex = #{sex,jdbcType=TINYINT},
      bornDate = #{bornDate,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      image1 = #{image1,jdbcType=VARCHAR},
      image2 = #{image2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select reals.id, CONVERT(AES_DECRYPT(reals.realName,#{key}) USING UTF8) as realName, reals.sex, reals.bornDate, AES_DECRYPT(reals.idNumber,#{key}) as idNumber, reals.address, reals.state, reals.image1, reals.image2, reals.remark,
    reals.auditTime, reals.applyTime, applier.id as ap_id, auditor.id as au_id,
    applier.username as ap_username,auditor.username as au_username
    from realauth reals
    join logininfo applier on reals.applier_id = applier.id
    left join logininfo auditor on reals.auditor_id = auditor.id
    where reals.id = #{id}
  </select>

  <sql id="where_sql">
    <where>
      <if test="qo.beginDate != null">
        AND reals.applyTime &gt; #{qo.beginDate}
      </if>
      <if test="qo.endDate != null">
        AND reals.applyTime &lt; #{qo.endDate}
      </if>
      <if test="qo.state != -1">
        AND reals.state = #{qo.state}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="int">
    SELECT COUNT(reals.id) FROM realauth reals <include refid="where_sql"/>
  </select>

  <select id="queryForData" resultMap="BaseResultMap">
    select reals.id, CONVERT(AES_DECRYPT(reals.realName,#{key}) USING UTF8) as realName, reals.sex, reals.bornDate, AES_DECRYPT(reals.idNumber,#{key}) as idNumber, reals.address, reals.state, reals.image1, reals.image2, reals.remark,
    reals.auditTime, reals.applyTime, applier.id as ap_id, auditor.id as au_id,
    applier.username as ap_username,auditor.username as au_username
    from realauth reals
    join logininfo applier on reals.applier_id = applier.id
    left join logininfo auditor on reals.auditor_id = auditor.id
    <include refid="where_sql"/>
    limit #{qo.start},#{qo.pageSize}
  </select>

</mapper>